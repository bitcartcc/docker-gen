name: DockerHub

on:
  workflow_dispatch:
  push:
    tags:
      - "*.*.*"
    paths:
      - ".dockerignore"
      - ".github/workflows/dockerhub.yml"
      - "Dockerfile"
      - "Dockerfile.debian"
      - "go.mod"
      - "go.sum"
      - "**.go"

jobs:
  multiarch-build:
    strategy:
      matrix:
        base: [alpine, debian]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Retrieve version
        run: echo "GIT_DESCRIBE=$(git describe --tags)" >> $GITHUB_ENV

      - name: Get Docker tags for Alpine based image
        if: ${{ matrix.base == 'alpine' }}
        id: docker_meta_alpine
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ secrets.DOCKER_REPO }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=latest,enable={{is_default_branch}}
          labels: |
            org.opencontainers.image.authors=Nicolas Duchon <nicolas.duchon@gmail.com> (@buchdag), Jason Wilder
            org.opencontainers.image.version=${{ env.GIT_DESCRIBE }}

      - name: Get Docker tags for Debian based image
        if: ${{ matrix.base == 'debian' }}
        id: docker_meta_debian
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ secrets.DOCKER_REPO }}
          tags: |
            type=semver,suffix=-debian,pattern={{version}}
            type=semver,suffix=-debian,pattern={{major}}.{{minor}}
            type=raw,value=debian,enable={{is_default_branch}}
          labels: |
            org.opencontainers.image.authors=Nicolas Duchon <nicolas.duchon@gmail.com> (@buchdag), Jason Wilder
            org.opencontainers.image.version=${{ env.GIT_DESCRIBE }}
          flavor: latest=false

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASS }}
      
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push the Alpine based image
        if: ${{ matrix.base == 'alpine' }}
        id: docker_build_alpine
        uses: docker/build-push-action@v3
        with:
          context: .
          build-args: DOCKER_GEN_VERSION=${{ env.GIT_DESCRIBE }}
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: true
          tags: ${{ steps.docker_meta_alpine.outputs.tags }}
          labels: ${{ steps.docker_meta_alpine.outputs.labels }}

      - name: Build and push the Debian based image
        if: ${{ matrix.base == 'debian' }}
        id: docker_build_debian
        uses: docker/build-push-action@v3
        with:
          context: .
          build-args: DOCKER_GEN_VERSION=${{ env.GIT_DESCRIBE }}
          file: Dockerfile.debian
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: true
          tags: ${{ steps.docker_meta_debian.outputs.tags }}
          labels: ${{ steps.docker_meta_debian.outputs.labels }}

      - name: Alpine based image digest
        if: ${{ matrix.base == 'alpine' }}
        run: echo ${{ steps.docker_build_alpine.outputs.digest }}

      - name: Debian based image digest
        if: ${{ matrix.base == 'debian' }}
        run: echo ${{ steps.docker_build_debian.outputs.digest }}
